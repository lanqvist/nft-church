name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: nft-church-dev.cr.cloud.ru
  IMAGE_NAME: lanqvist/nft-church
  VM_IP: 87.242.118.221
  VM_USER: admin

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.EVO_CR_LOGIN_DEV }}
        password: ${{ secrets.EVO_CR_PWD_DEV }}

    - name: Build and Push
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy-to-vm:
    runs-on: ubuntu-latest
    needs: build-and-push
    timeout-minutes: 10

    steps:
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

    - name: Setup server structure
      run: |
          # Проверяем существование файлов в репозитории
          if [ ! -f docker/prod/docker-compose.prod.yml ]; then
            echo "::error::docker-compose.prod.yml not found in repository!"
            exit 1
          fi
      
          # Создаем директории на сервере
          ssh -o StrictHostKeyChecking=no ${VM_USER}@${VM_IP} << 'EOL'
          sudo mkdir -p /opt/nft-church
          sudo chown -R ${VM_USER}:${VM_USER} /opt/nft-church
          sudo chmod -R 775 /opt/nft-church
          EOL
      
          # Копируем файлы с правами пользователя
          scp -o StrictHostKeyChecking=no \
            docker/prod/docker-compose.prod.yml \
            ${VM_USER}@${VM_IP}:/opt/nft-church/
      
          # Создаем .env файл
          ssh -o StrictHostKeyChecking=no ${VM_USER}@${VM_IP} << EOL
          cat << 'EOF' > /opt/nft-church/.env.prod
            REGISTRY=${{ env.REGISTRY }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            TAG=${{ github.sha }}
            EOF
          EOL

    - name: Deploy
      run: |
        ssh -o StrictHostKeyChecking=no ${VM_USER}@${VM_IP} << 'EOL'
        # Pull and run new container
        docker login -u ${{ secrets.EVO_CR_LOGIN_DEV }} -p ${{ secrets.EVO_CR_PWD_DEV }} ${{ env.REGISTRY }}
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

        # Graceful update
        docker compose -f /opt/nft-church/docker-compose.prod.yml down
        docker compose -f /opt/nft-church/docker-compose.prod.yml up -d

        # Cleanup
        docker image prune -af
        EOL