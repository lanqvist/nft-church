name: Deploy Frontend with Nginx

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CR_URI: nft-church-dev.cr.cloud.ru
  FRONTEND_IMAGE_NAME: frontend
  SSH_USER: admin
  SSH_HOST: 87.242.118.221
  PROJECT_PATH: /home/nft/front

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Evolution Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CR_URI }}
          username: ${{ secrets.EVO_CR_LOGIN_DEV }}
          password: ${{ secrets.EVO_CR_PWD_DEV }}

      - name: NodeJS - Build and push docker image to Evolution Aritfact Registry
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.CR_URI }}/frontend:v${{ github.event.pull_request.number }}
          file: ./Dockerfile
          context: ./

      - name: Set up SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Copy Dockerfile to VM
        run: |
          scp Dockerfile ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.PROJECT_PATH }}/Dockerfile.frontend

      - name: Copy docker-compose.yml to VM
        run: |
          scp docker-compose.yml ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.PROJECT_PATH }}/docker-compose.yml

      - name: Copy setup_nginx.sh to VM
        run: |
          scp setup_nginx.sh ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.PROJECT_PATH }}/setup_nginx.sh
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "chmod +x ${{ env.PROJECT_PATH }}/setup_nginx.sh"

      - name: Deploy with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "
            cd ${{ env.PROJECT_PATH }}
            docker-compose -f docker-compose.yml up -d
          "

      - name: Configure Nginx
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "
            sudo ${{ env.PROJECT_PATH }}/setup_nginx.sh
          "